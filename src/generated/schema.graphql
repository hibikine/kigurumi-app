type Account {
  id: ID!
  provider: String!
  providerAccountId: String!
  type: String!
  userId: String!
}

type Belonging {
  completed: Boolean!
  createdAt: DateTime!
  event: Event
  id: Int!
  name: String!
  updatedAt: DateTime!
  user: User!
}

scalar DateTime

type Event {
  createdAt: DateTime!
  date: DateTime!
  endDate: DateTime
  id: Int!
  location: String!
  locationGoogleUrl: String
  name: String!
  updatedAt: DateTime!
}

type Mutation {
  addBelonging(eventId: Int, name: String!): Belonging!
  deleteBelonging(belongingId: String!): Belonging!
  updateBelonging(belongingId: String!, completed: Boolean, name: String): Belonging!
}

type Query {
  belongings: [Belonging!]!
}

type User {
  email: String
  id: ID
  name: String
}

type eventUrl {
  createdAt: DateTime!
  eventId: Int!
  id: Int!
  updatedAt: DateTime!
  url: String!
  urlType: Int!
}

type eventUrlType {
  createdAt: DateTime!
  id: Int!
  name: String!
  updatedAt: DateTime!
}